{"version":3,"sources":["initialData.js","reduser/cardList.js","reduser/index.js","store/store.js","components/OpenHeader.js","components/CloseHeader.js","conteiner/ToDoNote/Header.js","components/ListElements.js","conteiner/Note/OpenNote.js","components/CloseNote.js","conteiner/Note/Note.js","conteiner/Note/NoteLists.js","conteiner/ToDoNote/ToDoNote.js","conteiner/ToDoNote/index.js","conteiner/ToDo.js","conteiner/App.js","index.js"],"names":["_","require","lists","id","uniqueId","name","initialData","notes","discription","listId","addList","createAction","addNote","deleteList","editList","editNote","deleteNote","transferNote","handleActions","_handleActions","Object","defineProperty","_ref","_ref2","payload","toConsumableArray","concat","_ref3","_ref4","_ref4$payload","_ref5","_ref6","filter","list","note","_ref7","_ref8","_ref8$payload","map","_ref9","_ref10","_ref10$payload","_ref11","_ref12","_ref13","_ref14","_ref14$payload","stateSelector","state","get","listsSelector","createSelector","combineReducers","cardList","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","OpenHeader","listName","changeState","inputValue","react_default","a","createElement","className","defaultValue","onKeyDown","e","currentTarget","value","keyCode","onClick","CloseHeader","Header","_this$props","this","props","isOpen","components_OpenHeader","onEditList","components_CloseHeader","Component","connect","store","ListElements","key","OpenNote","selectValue","_this","_this2","type","event","setState","onChange","disabled","components_ListElements","CloseNote","href","preventDefault","Note","Note_OpenNote","onEditNote","onTransferNote","components_CloseNote","onDeleteNote","NoteLists","conteiner_Note_Note","ToDoNote","onDeleteList","ToDoNote_Header","Note_NoteLists","onAddNote","onKeyPress","charCode","dispatch","ToDoNoteList","conteiner_ToDoNote_ToDoNote","ToDoList","inputTarget","conteiner_ToDoNote","onAddList","console","log","App","ToDo","render","es","conteiner_App","document","getElementById"],"mappings":"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","file":"static/js/main.d52e9c5a.chunk.js","sourcesContent":["\nvar _ = require(\"lodash\");\n\nexport const lists = [\n    {\n        id: +_.uniqueId(),\n        name: \"ToDo\"\n    },\n    {\n        id: +_.uniqueId(),\n        name: \"Doing\"\n    },\n    {\n        id: +_.uniqueId(),\n        name: \"Done\"\n    }\n]\n\n export const notes = [\n    {\n        id: 1,\n        discription: \"Fix bug whith player\",\n        listId: +lists[0].id\n    },\n    {\n        id: 2,\n        discription: \"Add feature with D3\",\n        listId: +lists[0].id\n    },\n    {\n        id: 3,\n        discription: \"Learn EmberJS\",\n        listId: +lists[1].id\n    }\n]\nexport default {lists, notes};","import { handleActions, createAction } from \"redux-actions\";\nimport initialData from \"../initialData\"\nimport get from 'lodash/get';\nimport { createSelector } from 'reselect';\n\nconst _= require(\"lodash\");\nexport const addList = createAction(\"ADD_LIST\");\nexport const addNote = createAction(\"ADD_NOTE\");\nexport const deleteList = createAction(\"DELETE_LIST\");\nexport const editList = createAction(\"EDIT_LIST\");\nexport const editNote = createAction(\"EDIT_NOTE\");\nexport const deleteNote = createAction(\"DELETE_NOTE\");\nexport const transferNote = createAction(\"TRANSFER_NOTE\");\n\n\n\nexport default handleActions({\n    [addList]: ({lists, notes}, {payload: name}) => ({\n        lists: [...lists, {\n            id: +_.uniqueId(),\n            name: name\n        }],\n        notes: notes\n    }),\n\n    [addNote]: ({lists, notes},{payload: {discription, listId}}) => ({\n        lists: lists,\n        notes: [...notes, {\n            id: +_.uniqueId(),\n            discription: discription,\n            listId: +listId\n        }]\n    }),\n\n    [deleteList]: ({lists, notes},{payload: listId}) => ({\n        lists: lists.filter(list => list.id !== listId),\n        notes: notes.filter(note => note.listId !== listId)\n    }),\n\n    [editList]: ({lists, notes}, {payload: {id, name}}) => ({\n        lists: lists.map(list => {\n            if (list.id === id){\n                list.name = name\n                return list\n            }\n            return list\n        }),\n\n        notes: notes\n    }),\n\n    [editNote]: ({lists, notes},{payload: {id, discription}}) => ({\n        lists: lists,\n        notes: notes.map(note => {\n            if (note.id === id){\n                note.discription = discription\n                return note\n            }\n            return note\n        })\n    }),\n\n    [deleteNote]: ({lists, notes},{payload: id}) => ({\n        lists:lists,\n        notes: notes.filter(note => note.id !== id)\n    }),\n\n    [transferNote]: ({lists, notes}, {payload:{id, listId}}) => ({\n        lists: lists,\n        notes: notes.map(note => {\n            if (note.id === id){\n                note.listId = +listId;\n                return note\n            }\n            return note\n        })\n    })\n\n},initialData\n)\nconst REDUCER_NAME = \"cardList\";\n\nexport const stateSelector = (state) => get(state, REDUCER_NAME);\nexport const listsSelector = createSelector(stateSelector, (state)=> get(state,\"lists\"));\n// const loadingSelector = createSelector(stateSelector, getReducerProp('loading'));","import { combineReducers} from \"redux\";\nimport cardList from \"./cardList\";\n\nexport default combineReducers({\n    cardList\n})","import { createStore } from \"redux\";\nimport reducer from \"../reduser/\"\n\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from \"react\"\n\nconst OpenHeader = ({listId, listName, editList, changeState}) => {\n    var inputValue = listName;\n    return(\n        <div className=\"openHeader\">\n            <input \n                defaultValue={listName} \n                className=\"inputHeader\" \n                onKeyDown={(e)=>{\n                    inputValue = e.currentTarget.value;\n                    if (e.keyCode === 13){\n                        editList(listId, inputValue);\n                        changeState();   \n                    }\n                }}>\n            </input>\n            <button className=\"buttonHeader\" onClick={() => {\n                editList(listId,inputValue);\n                changeState();\n                }}>\n                &#10004;\n            </button>\n        </div>\n    )\n}\n\nexport default OpenHeader","import React from \"react\"\n\nconst CloseHeader = ({listName}) => {return(<span>{listName}</span>)}\n\nexport default CloseHeader","import React, {Component} from \"react\"\nimport OpenHeader from \"../../components/OpenHeader\"\nimport CloseHeader from \"../../components/CloseHeader\"\nimport {connect} from \"react-redux\"\nimport {editList} from \"../../reduser/cardList\"\n\n\nclass Header extends Component{\n\n    render(){\n        const {listId, listName, isOpen, changeState} = this.props;\n        return(\n            isOpen ? \n            <OpenHeader listId={listId} listName={listName} editList={this.props.onEditList} changeState={changeState}/> : \n            <CloseHeader listName={listName}/>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state.cardList\n    }),\n    {\n        onEditList: (id, name) => editList({id, name})\n    }\n)(Header)","import React from \"react\";\n\n\nconst ListElements = ({lists}) =>  lists.map(list => {\n    return (\n        <option \n            key = {list.id} \n            value ={list.id}\n            >\n            {list.name}\n        </option>\n    )\n    \n}\n) \n\nexport default ListElements","import React, {Component} from \"react\";\nimport ListElements from \"../../components/ListElements\"\n\nclass OpenNote extends Component {  \n    state = {\n        selectValue: this.props.note.listId,\n        inputValue: this.props.note.discription\n    } \n    \n    render (){\n        const {note, changeState, lists, editNote, transferNote} = this.props\n        return(\n            <div className=\"openList\">\n                <input\n                    id = {note.id + \"input\"} \n                    type=\"text\" \n                    defaultValue={note.discription}\n                    onKeyDown={(event) => {\n                        this.setState({\n                            inputValue: event.currentTarget.value\n                        })\n                        if (event.keyCode === 27){\n                            changeState()\n                        }\n                        else if(event.keyCode === 13){\n                            editNote(note.id, this.state.inputValue);\n                            changeState();\n                        }\n                    }}>\n                </input>\n                <div className=\"openList select\">\n                    <select  defaultValue = {note.listId} onChange={(e) => {\n                        this.setState({\n                            selectValue: e.currentTarget.value\n                        })\n                        }}> \n                        <option disabled>---select list---</option>\n                        <ListElements lists = {lists}/>\n                    </select>\n                    <button onClick={()=>{\n                            transferNote(note.id, this.state.selectValue)\n                            editNote(note.id, this.state.inputValue);\n                            changeState();\n                        }}>\n                        Done\n                    </button>\n                </div>\n            </div>  \n        )\n    }\n}\n\nexport default OpenNote;","import React from \"react\";\n\n\nconst CloseNote = ({note, changeState, deleteNote}) => {\n    return(\n        <div className=\"closeList\">\n            <div className=\"closeList note\">\n                {note.discription}\n            </div>\n            <a className=\"hand\" href=\"public/index.html\" \n                onClick={(e) => e.preventDefault()}>\n                <div\n                    className=\"hand edit\" \n                    onClick = {() =>{\n                        changeState();\n                    }}>\n                </div>\n            </a>\n            <a className=\"hand\" href=\"public/index.html\" \n                onClick={(e) => e.preventDefault()}>\n                <div\n                    className=\"hand delete\" \n                    onClick = {() => deleteNote(note.id)}>\n                </div>\n            </a>\n        </div>\n    )\n}\n\nexport default CloseNote;","import React,{Component} from \"react\";\nimport OpenNote from \"./OpenNote\";\nimport CloseNote from \"../../components/CloseNote\";\nimport { connect } from \"react-redux\";\nimport {editNote, deleteNote, transferNote} from \"../../reduser/cardList\"\n\nclass Note extends Component{\n    state = {\n        isOpen: false\n    }\n\n    render(){\n        const {note, lists} = this.props;\n        return(\n            <div>\n                {this.state.isOpen ?\n                    <OpenNote \n                        note = {note} \n                        changeState = {this.changeState} \n                        lists= {lists} \n                        editNote={this.props.onEditNote} \n                        transferNote ={this.props.onTransferNote}\n                        /> : \n                    <CloseNote note = {note} changeState = {this.changeState} deleteNote={this.props.onDeleteNote}/>\n                }\n            </div>\n        )\n    }\n\n    changeState = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state.cardList\n    }),\n    {\n        onEditNote: (id, discription) => editNote({id, discription}) ,\n        onDeleteNote: deleteNote,\n        onTransferNote: (id, listId) => transferNote({id, listId})\n    }\n)(Note);","import React from \"react\";\nimport Note from \"./Note\"\n\nconst NoteLists = ({notes, lists, list}) => {\n    return(\n        notes.filter(note => note.listId === list.id).map(note => {\n            return (\n                <section key = {note.id}> \n                    <Note \n                        note={note} \n                        lists={lists} \n                    /> \n                </section>\n            )\n        })\n    )\n}\n\nexport default NoteLists","import React, {Component} from \"react\";\nimport Header from \"./Header\"\nimport {addNote, deleteList} from \"../../reduser/cardList\"\nimport NoteLists from \"../Note/NoteLists\"\nimport { connect } from \"react-redux\";\n\n\nclass ToDoNote extends Component {\n\n    state ={\n        isOpen:false,\n        inputValue: \"\"\n    }\n\n    changeState = () =>{\n        this.setState({\n            isOpen:!this.state.isOpen\n        })\n    }\n\n    render(){\n        return(\n            <section className=\"card\">\n\n                <h1>\n                    <a className=\"hand\" href=\"public/index.html\" onClick={(e) => e.preventDefault()}>\n                        <div id=\"penId\" className=\"hand editList\" onClick={()=> {this.changeState()}}></div>\n                    </a>\n                    <a className=\"hand\" href=\"public/index.html\" onClick={(e) => e.preventDefault()}>\n                        <div className=\"hand deleteList\" onClick={()=>this.props.onDeleteList(this.props.list.id)}></div>\n                    </a>\n                    <Header \n                        listId={this.props.list.id} \n                        listName={this.props.list.name} \n                        isOpen={this.state.isOpen}\n                        changeState={this.changeState}\n                    />\n                </h1>\n\n                <div className=\"card body\">\n                    <NoteLists \n                        notes= {this.props.store.notes} \n                        lists= {this.props.store.lists} \n                        list= {this.props.list}/>\n                </div>\n\n                <div className=\"card input\">\n                    <a className=\"hand\" href=\"public/index.html\"\n                        onClick={(e) => {e.preventDefault()}}>\n                        <div className=\"hand addList\"\n                            onClick={() => {\n                                this.props.onAddNote(this.props.list.id, this.state.inputValue);\n                                    this.setState({\n                                        inputValue: \"\"\n                                    })\n                                }\n                            }>\n                        </div>\n                    </a>\n                    <input \n                        value={this.state.inputValue}\n                        onChange = {(e) =>{\n                            this.setState({\n                                inputValue: e.currentTarget.value,\n                            })\n                            \n                        }} onKeyPress={(e) => {\n                            if (e.charCode === 13){\n                                this.props.onAddNote(this.props.list.id, this.state.inputValue);\n                                this.setState({\n                                    inputValue: \"\"\n                                })\n                            }\n                        }}>\n                    </input>\n                </div>\n                \n            </section>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state.cardList\n    }),\n    dispatch => ({\n        onAddNote: (listId, discription) => dispatch(addNote({listId,discription})),\n        onDeleteList: (listId) => dispatch(deleteList(listId))\n    })\n)(ToDoNote);","import React from \"react\";\nimport ToDoNote from \"./ToDoNote\"\n\nconst ToDoNoteList = ({lists}) =>{\n    return(\n        lists.map(list => {\n            return(\n                <section \n                    key = {list.id}\n                    >\n                    <ToDoNote \n                        list = {list} \n                    />\n                </section>\n               \n            )\n        })\n    )\n}\n\nexport default ToDoNoteList","import React, {Component} from \"react\";\nimport {addList, stateSelector, listsSelector} from \"../reduser/cardList\"\nimport ToDoNoteList from \"./ToDoNote\"\nimport { connect } from \"react-redux\";\n\n\nclass ToDoList extends Component{\n        \n    state ={\n        inputValue: \"\"\n    }\n\n    render(){\n        var inputTarget = this.state.inputTarget;\n        return(\n            <div>\n                <ToDoNoteList lists = {this.props.lists}/>\n                <section className=\"card newList\"> \n                    <div className=\"card input\">\n                        <a \n                            href=\"public/index.html\" \n                            className=\"hand\"\n                            onClick={(e)=>{e.preventDefault()}}>\n                            <div className=\"hand addList\"\n                                onClick={()=>{ \n                                    this.props.onAddList(this.state.inputValue);\n                                    this.setState({\n                                        inputValue: \"\"\n                                    })\n                                    \n                                }}>\n                            </div>\n                        </a>\n                        <input \n                            value = {this.state.inputValue}\n                            className=\"inputNewList\"\n                            type=\"text\"  \n                            onChange = {(e) => {\n                                this.setState({\n                                    inputValue: e.currentTarget.value,\n                                })  \n                            }}\n                            onKeyPress = {(e) => {\n                                if(e.charCode === 13){\n                                    console.log(\"pressEnter\")\n                                    this.props.onAddList(this.state.inputValue);\n                                    this.setState({\n                                        inputValue: \"\"\n                                    })\n                                }\n                            }}\n                            >\n                        </input>\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\nexport default connect(\n    state => ({\n        store: stateSelector(state),\n        lists: listsSelector(state)\n    }),\n    {\n        onAddList: addList\n    }\n)(ToDoList);","import React,{Component} from \"react\";\nimport ToDo from \"./ToDo\";\n\n\nclass App extends Component{\n\n    render(){\n        return(\n            <div>\n                <header>\n                        <div className=\"header\">ToDo</div>\n                </header>\n                <section>\n                    \n                        <ToDo/>\n                \n                </section>\n            </div>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\nimport {render} from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\"\nimport App from \"./conteiner/App\";\nimport \"./style/Trello.css\";\n\nrender(\n    <Provider store = {store}>\n        <App/>\n    </Provider>, \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}